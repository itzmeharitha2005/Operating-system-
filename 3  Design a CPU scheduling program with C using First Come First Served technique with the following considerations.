#include <stdio.h>

typedef struct {
    int process_id;   // Process ID
    int arrival_time; // Arrival time
    int burst_time;   // Burst time (execution time)
    int completion_time; // Completion time
    int turnaround_time; // Turnaround time
    int waiting_time; // Waiting time
} Process;

// Function to calculate FCFS scheduling
void FCFS(Process processes[], int n) {
    int total_waiting_time = 0, total_turnaround_time = 0;
    
    // Completion time for the first process is its arrival time + burst time
    processes[0].completion_time = processes[0].arrival_time + processes[0].burst_time;
    
    // For remaining processes, calculate the completion time
    for (int i = 1; i < n; i++) {
        processes[i].completion_time = processes[i - 1].completion_time + processes[i].burst_time;
    }

    // Calculate waiting time and turnaround time for each process
    for (int i = 0; i < n; i++) {
        processes[i].turnaround_time = processes[i].completion_time - processes[i].arrival_time;
        processes[i].waiting_time = processes[i].turnaround_time - processes[i].burst_time;

        total_waiting_time += processes[i].waiting_time;
        total_turnaround_time += processes[i].turnaround_time;
    }

    // Calculate and print average waiting and turnaround times
    printf("\nProcess ID\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n",
               processes[i].process_id,
               processes[i].arrival_time,
               processes[i].burst_time,
               processes[i].completion_time,
               processes[i].turnaround_time,
               processes[i].waiting_time);
    }

    printf("\nAverage Waiting Time: %.2f", (float)total_waiting_time / n);
    printf("\nAverage Turnaround Time: %.2f", (float)total_turnaround_time / n);
}

int main() {
    int n;

    // Accept the number of processes
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    Process processes[n];

    // Accept arrival time and burst time for each process
    for (int i = 0; i < n; i++) {
        processes[i].process_id = i + 1; // Assign process ID starting from 1
        printf("\nEnter arrival time and burst time for Process %d:\n", i + 1);
        printf("Arrival Time: ");
        scanf
