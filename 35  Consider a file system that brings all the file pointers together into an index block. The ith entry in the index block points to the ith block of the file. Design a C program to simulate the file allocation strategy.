#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_BLOCKS 5        // Maximum number of data blocks
#define MAX_RECORD_SIZE 100 // Maximum size of each record (in characters)

// Structure to represent a file
struct File {
    char index_block[MAX_BLOCKS][sizeof(char*)]; // Index block (each entry points to a data block)
    char data_blocks[MAX_BLOCKS][MAX_RECORD_SIZE]; // Data blocks (stores file data)
};

// Function to initialize the file
void initialize_file(struct File* file) {
    for (int i = 0; i < MAX_BLOCKS; i++) {
        // Simulate empty data blocks
        strcpy(file->data_blocks[i], "");
        // Initialize the index block to point to NULL initially
        file->index_block[i][0] = '\0';
    }
}

// Function to simulate adding a record to the file
void add_record(struct File* file, int block_num, const char* record) {
    if (block_num < 0 || block_num >= MAX_BLOCKS) {
        printf("Invalid block number.\n");
        return;
    }

    // Add record to the specified data block
    strcpy(file->data_blocks[block_num], record);
    // Update the index block to point to the data block
    sprintf(file->index_block[block_num], "%p", file->data_blocks[block_num]);
}

// Function to read a record from the file using the index block
void read_record(struct File* file, int block_num) {
    if (block_num < 0 || block_num >= MAX_BLOCKS) {
        printf("Invalid block number.\n");
        return;
    }

    // Simulate accessing the data block using the index block
    char* data_block = (char*)file->index_block[block_num];
    if (data_block[0] != '\0') {
        printf("Record in Block %d: %s\n", block_num, file->data_blocks[block_num]);
    } else {
        printf("Block %d is empty.\n", block_num);
    }
}

int main() {
    struct File file;

    // Initialize the file system
    initialize_file(&file);

    // Add some records to the file
    add_record(&file, 0, "Record 1: File system details - John");
    add_record(&file, 2, "Record 2: File system details - Alice");
    add_record(&file, 4, "Record 3: File system details - Bob");

    // Read records from the file using the index block
    printf("Reading records from the file:\n");
    for (int i = 0; i < MAX_BLOCKS; i++) {
        read_record(&file, i);
    }

    return 0;
}
