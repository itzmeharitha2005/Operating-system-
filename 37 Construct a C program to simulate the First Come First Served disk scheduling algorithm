#include <stdio.h>
#include <stdlib.h>

#define MAX_REQUESTS 10

// Function to calculate the total seek time for FCFS
int calculate_seek_time(int* requests, int num_requests, int initial_position) {
    int total_seek_time = 0;
    int current_position = initial_position;
    
    printf("Serving Requests in FCFS Order:\n");
    for (int i = 0; i < num_requests; i++) {
        // Calculate the seek time for the current request
        int seek_time = abs(requests[i] - current_position);
        total_seek_time += seek_time;
        
        // Output the request and its seek time
        printf("Move from track %d to track %d (Seek time: %d)\n", current_position, requests[i], seek_time);
        
        // Update the current position of the disk head
        current_position = requests[i];
    }
    
    return total_seek_time;
}

int main() {
    int requests[MAX_REQUESTS];   // Array to store disk requests
    int num_requests;             // Number of requests
    int initial_position;         // Initial position of the disk head
    
    // Input number of disk requests
    printf("Enter the number of disk requests: ");
    scanf("%d", &num_requests);
    
    // Input disk requests
    printf("Enter the disk requests (track numbers):\n");
    for (int i = 0; i < num_requests; i++) {
        scanf("%d", &requests[i]);
    }
    
    // Input initial position of the disk head
    printf("Enter the initial position of the disk head: ");
    scanf("%d", &initial_position);
    
    // Calculate the total seek time using FCFS
    int total_seek_time = calculate_seek_time(requests, num_requests, initial_position);
    
    // Output the total seek time
    printf("\nTotal Seek Time: %d\n", total_seek_time);
    
    return 0;
}
